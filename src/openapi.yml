openapi: 3.0.0
info:
  title: NIBM Bus Ticket Booking API
  version: 1.0.0
servers:
  - url: https://ashanidilanka.com/api/v1
  - url: http://localhost:5000/api/v1
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
tags:
  - name: Auth
  - name: User Management
  - name: Routes Management
  - name: Bus Management
  - name: Permit Management
  - name: Bookings & Payments
paths:
  /auth/register:
    post:
      tags:
        - Auth
      summary: Register New User
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Admin User
                email: learn.dev0603@gmail.com
                password: password123
                role: admin
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /auth/login:
    post:
      tags:
        - Auth
      summary: User Login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: learn.dev0603@gmail.com
                password: password123
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /auth/refresh-token:
    post:
      tags:
        - Auth
      summary: Refresh Token
      requestBody:
        content: {}
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /auth/logout:
    post:
      tags:
        - Auth
      summary: User Logout
      requestBody:
        content: {}
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /user:
    post:
      tags:
        - User Management
      summary: Create User
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: operator User
                email: operator@example.com
                password: securepassword
                role: bus_operator
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /users:
    get:
      tags:
        - User Management
      summary: View All Users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /users/67555515f59a4567a5b172b8:
    get:
      tags:
        - User Management
      summary: View Single User
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /users/67557cc724cfc8c600a5d374:
    put:
      tags:
        - User Management
      summary: Update a User
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: John Doe
                email: john.doe@example.com
                role: commuter
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - User Management
      summary: Delete a User
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /route:
    post:
      tags:
        - Routes Management
      summary: Create a Route
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                routeNumber: R001
                name: City Center to Green Park
                category: Local
                stops:
                  - name: City Center
                    location:
                      type: Point
                      coordinates:
                        - 79.8612
                        - 6.9271
                    distanceFromStart: 0
                    estimatedTime: 0
                  - name: Green Park
                    location:
                      type: Point
                      coordinates:
                        - 79.87
                        - 6.91
                    distanceFromStart: 5
                    estimatedTime: 15
                schedules:
                  - departureTime: '08:00'
                    operatingDays:
                      - Monday
                      - Tuesday
                      - Wednesday
                      - Thursday
                      - Friday
                fares:
                  - fromStop: City Center
                    toStop: Green Park
                    amount: 50
                distance: 5
                estimatedDuration: 15
                restrictions:
                  maxCapacity: 50
                  allowStanding: true
                features:
                  hasWifi: false
                  hasAC: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Routes Management
      summary: View All Routes
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /route/677338b307bbc8b7481ab5fc:
    get:
      tags:
        - Routes Management
      summary: View Single Route
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    put:
      tags:
        - Routes Management
      summary: Update a Route
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Updated Route Name
                category: Express
                distance: 10
                estimatedDuration: 25
                features:
                  hasWifi: true
                  hasAC: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Routes Management
      summary: Delete a Route
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /route/calculate-fare:
    get:
      tags:
        - Routes Management
      summary: Calculate Fare
      security:
        - bearerAuth: []
      parameters:
        - name: routeId
          in: query
          schema:
            type: string
          example: 677338b307bbc8b7481ab5fc
        - name: startStop
          in: query
          schema:
            type: string
          example: City Center
        - name: endStop
          in: query
          schema:
            type: string
          example: Green Park
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /route/677358d56fbafb47bd73420c/assign-busses:
    put:
      tags:
        - Routes Management
      summary: Busses Assign to Route
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                buses:
                  - bus: 67738293664192688d3a39dc
                    schedule: 677358d56fbafb47bd73420f
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /bus:
    post:
      tags:
        - Bus Management
      summary: Create a Bus
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                registrationNumber: AB123CD
                model: Volvo B9R
                manufacturer: Volvo
                capacity:
                  seating: 40
                  standing: 5
                features:
                  hasAC: true
                  hasWifi: true
                  hasUSBCharging: true
                  hasEntertainmentSystem: true
                busType: luxury
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /buses:
    get:
      tags:
        - Bus Management
      summary: View All Buses
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /bus/677367d67d392761f0e3e13e:
    get:
      tags:
        - Bus Management
      summary: View Single Bus
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    put:
      tags:
        - Bus Management
      summary: Update a Bus
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                model: Volvo B11R
                manufacturer: Volvo
                capacity:
                  seating: 45
                  standing: 5
                features:
                  hasAC: true
                  hasWifi: true
                  hasUSBCharging: true
                  hasEntertainmentSystem: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /bus/67734f296fbafb47bd7341cd:
    delete:
      tags:
        - Bus Management
      summary: Delete a Bus
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /bus/67738293664192688d3a39dc/seats:
    post:
      tags:
        - Bus Management
      summary: Set Seat Layout
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                rows: 3
                columnLayouts:
                  - - A
                    - B
                    - C
                  - - A
                    - B
                    - C
                  - - A
                    - B
                    - C
                seatTypes:
                  '1':
                    A:
                      type: window
                      isAisle: false
                    B:
                      type: middle
                      isAisle: false
                    C:
                      type: aisle
                      isAisle: true
                  '2':
                    A:
                      type: window
                      isAisle: false
                    B:
                      type: middle
                      isAisle: false
                    C:
                      type: aisle
                      isAisle: true
                  '3':
                    A:
                      type: window
                      isAisle: false
                    B:
                      type: middle
                      isAisle: false
                    C:
                      type: aisle
                      isAisle: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Bus Management
      summary: Get Seat Layout
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /bus/67737fa7c5d9df85a911ff06/seats:
    put:
      tags:
        - Bus Management
      summary: Update a Seat
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                rows: 3
                columnLayouts:
                  - - A
                    - B
                    - C
                  - - A
                    - B
                    - C
                  - - A
                    - B
                    - C
                seatTypes:
                  '1':
                    A:
                      type: window
                      isAisle: false
                    B:
                      type: middle
                      isAisle: false
                    C:
                      type: aisle
                      isAisle: true
                  '2':
                    A:
                      type: window
                      isAisle: false
                    B:
                      type: middle
                      isAisle: false
                    C:
                      type: aisle
                      isAisle: true
                  '3':
                    A:
                      type: window
                      isAisle: false
                    B:
                      type: middle
                      isAisle: false
                    C:
                      type: aisle
                      isAisle: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Bus Management
      summary: Delete Seat Matrix
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /bus/67737fa7c5d9df85a911ff06/seats/1/A:
    put:
      tags:
        - Bus Management
      summary: Update Single Seat
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                isBlocked: true
                isAisle: false
                type: window
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Bus Management
      summary: Get Single Seat
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /permit:
    post:
      tags:
        - Permit Management
      summary: Create Permit
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                permitNumber: PN12345
                issueDate: '2025-01-01'
                expiryDate: '2025-11-31'
                route: 677358d56fbafb47bd73420c
                bus: 67738293664192688d3a39dc
                operator: 6773fc7372126808af53cedb
                status: active
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Permit Management
      summary: View All Permit
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /permit/67740133f269b60a1b42d50c:
    put:
      tags:
        - Permit Management
      summary: Update Permit
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                permitNumber: PN12345
                issueDate: '2024-12-31'
                expiryDate: '2025-01-01'
                route: 64aef8b2c4f27b0034b0e7f6
                bus: 64aef8b2c4f27b0034b0e7f7
                operator: 64aef8b2c4f27b0034b0e7f8
                status: active
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Permit Management
      summary: Delete Permit
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Permit Management
      summary: View Single Permit
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /permit/PN12345:
    get:
      tags:
        - Permit Management
      summary: Check Permit Validity
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/booking:
    post:
      tags:
        - Bookings & Payments
      summary: Booking
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                from: City Center
                to: Green Park
                date: 2025-01-3
                seatIds:
                  - 6773839b664192688d3a39ef
                  - 6773839b664192688d3a39f0
                routeId: 677358d56fbafb47bd73420c
                paymentDetails:
                  method: credit_card
                  cardNumber: '4111111111111111'
                  cardType: visa
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/booking/6773ce032f28d014e3fa3bae/cancel:
    delete:
      tags:
        - Bookings & Payments
      summary: Cancel Booking
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/bookings:
    get:
      tags:
        - Bookings & Payments
      summary: View All Bookings
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /booking-details/6773ce032f28d014e3fa3bae:
    get:
      tags:
        - default
      summary: New Request
      responses:
        '200':
          description: OK
          headers:
            X-Powered-By:
              schema:
                type: string
                example: Express
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '766'
            ETag:
              schema:
                type: string
                example: W/"2fe-HPHDq4Hj7U7Q0KPl7TSeO0t7kjo"
            Date:
              schema:
                type: string
                example: Tue, 31 Dec 2024 11:54:38 GMT
            Connection:
              schema:
                type: string
                example: keep-alive
            Keep-Alive:
              schema:
                type: string
                example: timeout=5
          content:
            application/json:
              schema:
                type: object
              example:
                success: true
                booking:
                  payment:
                    details:
                      cardDetails:
                        lastFourDigits: '1111'
                        cardType: visa
                      method: credit_card
                      paidAmount: 100
                      paidAt: '2024-12-31T10:57:07.316Z'
                    required: true
                    status: refunded
                  _id: 6773ce032f28d014e3fa3bae
                  user:
                    _id: 6772843f3fdcb343dfe9fab8
                    name: Admin User
                    email: learn.dev0603@gmail.com
                  seats:
                    - seatId: 6773839b664192688d3a39ef
                      label: 1A
                      _id: 6773ce032f28d014e3fa3baf
                    - seatId: 6773839b664192688d3a39f0
                      label: 1B
                      _id: 6773ce032f28d014e3fa3bb0
                  routeId:
                    _id: 677358d56fbafb47bd73420c
                    name: City Center to Green Park
                  date: '2025-01-02T18:30:00.000Z'
                  totalFare: 100
                  status: cancelled
                  createdAt: '2024-12-31T10:57:07.317Z'
                  updatedAt: '2024-12-31T10:57:07.317Z'
                  __v: 0